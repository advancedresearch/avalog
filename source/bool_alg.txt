univ : type

// type -> type
type2 : type
// type -> type -> type
type3 : type

bool : type
// bool -> bool
bool2 : type
// bool -> bool -> bool
bool3 : type

(type, univ)
(type2, type)
(bool2, type2)
(bool3, type3)

false : value
true : value

(false, bool)
(true, bool)

(not, bool2)
(not(false), true)
(not(true), false)

(id, bool2)
(id(false), false)
(id(true), true)

(and, bool3)
(and(false, false), false)
(and(false, true), false)
(and(true, false), false)
(and(true, true), true)

(or, bool3)
(or(false, false), false)
(or(false, true), true)
(or(true, false), true)
(or(true, true), true)

(not(value(not(value(not(false))))), true)

(and(true, value(not(true))), false)
(and(value(not(false)), value(not(false))), true)
(and(value(or(false, true)), true), true)
